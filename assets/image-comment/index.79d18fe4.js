import"../modulepreload-polyfill.c7c6310f.js";class u extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"}),o=document.querySelector("#comment").content.cloneNode(!0);t.append(o),this._name=this.shadowRoot.querySelector(".comment--name"),this._email=this.shadowRoot.querySelector(".comment--email"),this._body=this.shadowRoot.querySelector(".comment--body"),this._time=this.shadowRoot.querySelector(".comment--time")}static get observedAttributes(){return["name","email","body","time"]}attributeChangedCallback(t,o,e){o!==e&&this[`_${t}`]&&(this[`_${t}`].textContent=e)}}customElements.get("my-comment")===void 0&&customElements.define("my-comment",u);class d{constructor(t={}){const o=this;this._subscribers=[],this._state=new Proxy(t,{set(e,c,i){e[c]=i;for(const a of o._subscribers)a(e);return!0}})}subscribe(t){if(typeof t!="function")throw new Error("Callback is not a function");this._subscribers.push(t),t(this._state)}addComment(t){t.date||(t.date=new Date),this._state.comments.push(t),this._state.comments=this._state.comments}}const m=new d({comments:[]}),l=document.querySelectorAll("[required]"),n=document.querySelector("#comment-form"),r=document.querySelector("#comments");for(const s of l)s.closest(".form--group").querySelector("label").classList.add("required");n.addEventListener("submit",s=>{s.preventDefault();const t=Object.fromEntries(new FormData(n).entries());console.log(t),m.addComment(t),s.target.reset(),s.target.querySelector("input, textarea, button").focus()});m.subscribe(s=>{const t=s.comments;console.log(t),r.innerHTML="";for(const o of t){const e=document.createElement("my-comment");e.setAttribute("name",o.name),e.setAttribute("email",o.email),e.setAttribute("body",o.body),e.setAttribute("time",o.date),r.append(e)}});
