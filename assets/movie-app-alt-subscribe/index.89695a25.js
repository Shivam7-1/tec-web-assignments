import"../modulepreload-polyfill.c7c6310f.js";import{o as v}from"../index.783118d6.js";const d=v("movie-app",1,{upgrade(i){i.createObjectStore("movies",{keyPath:"imdbID"}),i.createObjectStore("settings"),i.createObjectStore("notes",{keyPath:"imdbID"})}});class y{constructor(t={}){const e=this;this._subscribers={},d.then(async s=>{this.db=s;const o=await s.get("settings","key");o&&(this._state.key=o);const r=await s.get("settings","favorites");r&&(this._state.favorites=r);const n=await s.getAll("notes");n.length&&(this._state.notes=Object.fromEntries(n.map(({imdbID:c,note:b})=>[c,b]))||{})}),this._state=new Proxy(t,{async set(s,o,r){if(s[o]=r,e.db){if(o==="key"&&await e.db.put("settings",r,"key"),o==="favorites"){await e.db.put("settings",r,"favorites");const n=s.movies.filter(c=>r.includes(c.imdbID)).map(c=>e.db.put("movies",c));await Promise.all(n)}o==="notes"&&await Promise.all(Object.entries(r).map(([n,c])=>e.db.put("notes",{note:c,imdbID:n})))}if(e._subscribers._all)for(const n of e._subscribers._all)n(s);if(e._subscribers[o])for(const n of e._subscribers[o])n(s);return!0}})}subscribe(t,e=["_all"]){if(typeof t!="function")throw new Error("Callback is not a function");Array.isArray(e)||(e=[e]);for(const s of e)this._subscribers[s]||(this._subscribers[s]=[]),this._subscribers[s].push(t);t(this._state)}state(t){return t?this._state[t]:this._state}search(t){t.key&&(this._state.key=t.key),this._state.search={title:t.title,year:t.year||""},this._state.error="",this.movieLookup()}reset(){this._state.search=null,this._state.movies=[]}toggleFavorite(t){const e=this.state("favorites")||[];e.includes(t)?e.splice(e.indexOf(t),1):e.push(t),this._state.favorites=e}setNote(t,e){const s=this.state("notes")||{};s[t]=e,this._state.notes=s}async movieLookup(){let t=this.state("key"),e=this.state("search");if(!t)return this._state.error="No API Key";let s=`https://www.omdbapi.com/?apikey=${t}&s=${e.title}`;e.year&&(s+=`&y=${e.year}`);try{const r=await(await fetch(s)).json();r.Response==="False"&&(this._state.error=r.Error),Array.isArray(r.Search)?this._state.movies=r.Search:this._state.movies=[]}catch(o){this._state.error=o.message}}}const l=new y({search:"",movies:[]});class p extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"}),e=document.querySelector("#movie-template").content.cloneNode(!0);t.append(e),this._poster=this.shadowRoot.querySelector(".movie--poster"),this._title=this.shadowRoot.querySelector(".movie--title"),this._year=this.shadowRoot.querySelector(".movie--year"),this._favorite=this.shadowRoot.querySelector(".movie--favorite"),this._showNotes=this.shadowRoot.querySelector(".movie--show-notes"),this._notes=this.shadowRoot.querySelector(".movie--notes")}static get observedAttributes(){return["poster","title","year","imdb"]}attributeChangedCallback(t,e,s){e!==s&&(t==="poster"&&(this._poster.src=s,this._poster.alt=`Poster for ${this.title}`),t==="title"&&(this._title.textContent=s),t==="year"&&(this._year.textContent=s))}connectedCallback(){const t=this.getAttribute("imdb");this._favorite.addEventListener("click",()=>{l.toggleFavorite(t)}),this._notes.addEventListener("input",e=>{l.setNote(t,e.target.value)}),this._showNotes.addEventListener("click",()=>{this._notes.classList.toggle("hidden"),this._notes.classList.contains("hidden")?this._showNotes.textContent="Show notes":this._showNotes.textContent="Hide notes"}),l.subscribe(e=>{var s;this._notes.textContent!==e.notes[t]&&(this._notes.textContent=e.notes[t]),(s=e==null?void 0:e.favorites)!=null&&s.includes(t)?this._favorite.textContent="Unfavorite":this._favorite.textContent="Favorite"},["notes","favorites"])}}customElements.get("movie-element")===void 0&&customElements.define("movie-element",p);const u=document.querySelector("#search"),_=document.querySelectorAll("[required]"),a=document.querySelector("#year"),h=document.querySelector("#output"),f=document.querySelector("#key");for(const i of _)i.closest(".form--group").querySelector("label").classList.add("required");a.setAttribute("max",new Date().getFullYear());a.addEventListener("input",i=>{a.setCustomValidity(""),a.checkValidity()});a.addEventListener("invalid",()=>{Number(a.value)<Number(a.getAttribute("min"))?a.setCustomValidity(`Year must be greater than or equal to ${a.getAttribute("min")}`):Number(a.value)>Number(a.getAttribute("max"))&&a.setCustomValidity(`Year must be less than or equal to ${a.getAttribute("max")}`)});l.subscribe(i=>{i.key?(f.value=i.key,f.closest(".form--group").style.display="none"):f.closest(".form--group").style.display="block"},["key"]);function m(i){const t=document.createElement("movie-element");return t.setAttribute("poster",i.Poster),t.setAttribute("title",i.Title),t.setAttribute("year",i.Year),t.setAttribute("imdb",i.imdbID),t}l.subscribe(async i=>{const t=i.movies;if(h.innerHTML="",t.length>0)for(const e of t)h.append(m(e));else if(!i.search&&i.favorites&&i.favorites){const e=await d,s=await Promise.all(i.favorites.map(o=>e.get("movies",o)));if(s.length>0)for(const o of s)h.append(m(o))}},["movies","search","favorites"]);u.addEventListener("submit",async i=>{i.preventDefault();const t=new FormData(u),e=Object.fromEntries(t.entries()),s=u.querySelectorAll("input, button, textarea");for(const o of s)o.disabled=!0;l.search(e);for(const o of s)o.disabled=!1});u.addEventListener("reset",()=>{l.reset()});
