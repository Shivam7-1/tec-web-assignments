import"../modulepreload-polyfill.c7c6310f.js";import{o as b}from"../index.783118d6.js";const d=b("movie-app",1,{upgrade(i){i.createObjectStore("movies",{keyPath:"imdbID"}),i.createObjectStore("settings"),i.createObjectStore("notes",{keyPath:"imdbID"})}});class v{constructor(t={}){const e=this;this._subscribers=[],d.then(async s=>{this.db=s;const o=await s.get("settings","key");o&&(this._state.key=o);const r=await s.get("settings","favorites");r&&(this._state.favorites=r);const a=await s.getAll("notes");a.length&&(this._state.notes=Object.fromEntries(a.map(({imdbID:l,note:f})=>[l,f]))||{})}),this._state=new Proxy(t,{async set(s,o,r){if(s[o]=r,e.db){if(o==="key"&&await e.db.put("settings",r,"key"),o==="favorites"){await e.db.put("settings",r,"favorites");const a=s.movies.filter(l=>r.includes(l.imdbID)).map(l=>e.db.put("movies",l));await Promise.all(a)}o==="notes"&&await Promise.all(Object.entries(r).map(([a,l])=>e.db.put("notes",{note:l,imdbID:a})))}for(const a of e._subscribers)a(s);return!0}})}subscribe(t){if(typeof t!="function")throw new Error("Callback is not a function");this._subscribers.push(t),t(this._state)}state(t){return t?this._state[t]:this._state}search(t){t.key&&(this._state.key=t.key),this._state.search={title:t.title,year:t.year||""},this._state.error="",this.movieLookup()}reset(){this._state.search=null,this._state.movies=[]}toggleNoteVisibility(t){const e=this.state("visibleNotes")||{};e[t]===!0?e[t]=!1:e[t]=!0,this._state.visibleNotes=e}toggleFavorite(t){const e=this.state("favorites")||[];e.includes(t)?e.splice(e.indexOf(t),1):e.push(t),this._state.favorites=e}setNote(t,e){const s=this.state("notes")||{};s[t]=e,this._state.notes=s}async movieLookup(){let t=this.state("key"),e=this.state("search");if(!t)return this._state.error="No API Key";let s=`https://www.omdbapi.com/?apikey=${t}&s=${e.title}`;e.year&&(s+=`&y=${e.year}`);try{const r=await(await fetch(s)).json();r.Response==="False"&&(this._state.error=r.Error),Array.isArray(r.Search)?this._state.movies=r.Search:this._state.movies=[]}catch(o){this._state.error=o.message}}}const c=new v({search:"",movies:[]});class y extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"}),e=document.querySelector("#movie-template").content.cloneNode(!0);t.append(e),this._poster=this.shadowRoot.querySelector(".movie--poster"),this._title=this.shadowRoot.querySelector(".movie--title"),this._year=this.shadowRoot.querySelector(".movie--year"),this._favorite=this.shadowRoot.querySelector(".movie--favorite"),this._showNotes=this.shadowRoot.querySelector(".movie--show-notes"),this._notes=this.shadowRoot.querySelector(".movie--notes")}static get observedAttributes(){return["poster","title","year","imdb","notes","visible-notes"]}attributeChangedCallback(t,e,s){e!==s&&(t==="poster"&&(this._poster.src=s,this._poster.alt=`Poster for ${this.title}`),t==="title"&&(this._title.textContent=s),t==="year"&&(this._year.textContent=s),t==="notes"&&(this._notes.textContent=s),t==="visible-notes"&&console.log("Hello"))}connectedCallback(){const t=this.getAttribute("imdb");this._favorite.addEventListener("click",()=>{c.toggleFavorite(t)}),this._notes.addEventListener("input",e=>{c.setNote(t,e.target.value)}),this._showNotes.addEventListener("click",()=>{c.toggleNoteVisibility(t)}),c.subscribe(e=>{var s;if(e.visibleNotes)if(e.visibleNotes[t]){this._showNotes.textContent="Hide notes",this._notes.classList.remove("hidden");const o=this._notes.value.length;this._notes.setSelectionRange(o,o),this._notes.focus()}else this._showNotes.textContent="Show notes",this._notes.classList.add("hidden");(s=e==null?void 0:e.favorites)!=null&&s.includes(t)?this._favorite.textContent="Unfavorite":this._favorite.textContent="Favorite"})}}customElements.get("movie-element")===void 0&&customElements.define("movie-element",y);const h=document.querySelector("#search"),p=document.querySelectorAll("[required]"),n=document.querySelector("#year"),u=document.querySelector("#output"),m=document.querySelector("#key");for(const i of p)i.closest(".form--group").querySelector("label").classList.add("required");n.setAttribute("max",new Date().getFullYear());n.addEventListener("input",i=>{n.setCustomValidity(""),n.checkValidity()});n.addEventListener("invalid",()=>{Number(n.value)<Number(n.getAttribute("min"))?n.setCustomValidity(`Year must be greater than or equal to ${n.getAttribute("min")}`):Number(n.value)>Number(n.getAttribute("max"))&&n.setCustomValidity(`Year must be less than or equal to ${n.getAttribute("max")}`)});c.subscribe(i=>{console.log(i),i.key?(m.value=i.key,m.closest(".form--group").style.display="none"):m.closest(".form--group").style.display="block"});c.subscribe(async i=>{const t=i.movies;if(u.innerHTML="",t.length>0)for(const e of t){const s=document.createElement("movie-element");s.setAttribute("poster",e.Poster),s.setAttribute("title",e.Title),s.setAttribute("year",e.Year),s.setAttribute("imdb",e.imdbID),s.setAttribute("notes",(i==null?void 0:i.notes[e.imdbID])||""),u.append(s)}else if(!i.search&&i.favorites&&i.favorites){const e=await d,s=await Promise.all(i.favorites.map(o=>e.get("movies",o)));if(s.length>0)for(const o of s){const r=document.createElement("movie-element");r.setAttribute("poster",o.Poster),r.setAttribute("title",o.Title),r.setAttribute("year",o.Year),r.setAttribute("imdb",o.imdbID),r.setAttribute("notes",(i==null?void 0:i.notes[o.imdbID])||""),u.append(r)}}});h.addEventListener("submit",async i=>{i.preventDefault();const t=new FormData(h),e=Object.fromEntries(t.entries()),s=h.querySelectorAll("input, button, textarea");for(const o of s)o.disabled=!0;c.search(e);for(const o of s)o.disabled=!1});h.addEventListener("reset",()=>{c.reset()});
